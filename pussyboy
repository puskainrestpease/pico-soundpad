1 кнопка
findViewById<Button>(R.id.button_save_sound).setOnClickListener {
    saveSound("/path/to/sound/file.mp3", "Sound 1")
}

private fun saveSound(filePath: String, soundName: String) {
    try {
        val sourceFile = File(filePath)
        if (!sourceFile.exists()) {
            Log.e("SaveSound", "Source file does not exist")
            return
        }
        val destinationFile = File(filesDir, soundName)
        val inputStream = FileInputStream(sourceFile)
        val outputStream = FileOutputStream(destinationFile)
        val buffer = ByteArray(1024)
        var length: Int
        while (inputStream.read(buffer).also { length = it } > 0) {
            outputStream.write(buffer, 0, length)
        }

        // Close streams
        inputStream.close()
        outputStream.close()

        Log.d("SaveSound", "Sound saved as: $soundName at ${destinationFile.path}")
    } catch (e: IOException) {
        Log.e("SaveSound", "Error saving sound", e)
    }
}


2 кнопка
findViewById<Button>(R.id.button_play_sound).setOnClickListener {
    playSound("/path/to/sound/file.mp3")
}

private fun playSound(filePath: String) {
    val mediaPlayer = MediaPlayer()
    mediaPlayer.setDataSource(filePath)
    mediaPlayer.prepare()
    mediaPlayer.start()
}
3 кнопка
findViewById<Button>(R.id.button_play_sound).setOnClickListener {
    playSound("/path/to/sound/file.mp3")
}

private fun playSound(filePath: String) {
    val mediaPlayer = MediaPlayer()
    mediaPlayer.setDataSource(filePath)
    mediaPlayer.prepare()
    mediaPlayer.start()
}
4 кнопка
var isPlaying = false
val mediaPlayer = MediaPlayer()

findViewById<Button>(R.id.button_player).setOnClickListener {
    if (isPlaying) {
        mediaPlayer.pause()
    } else {
        mediaPlayer.start()
    }
    isPlaying = !isPlaying
}
